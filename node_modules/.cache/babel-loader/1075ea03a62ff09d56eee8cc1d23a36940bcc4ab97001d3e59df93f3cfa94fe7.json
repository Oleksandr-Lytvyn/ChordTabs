{"ast":null,"code":"var _jsxFileName = \"/Users/alexandrlytvyn/Documents/GOIT_REACT/GuitarTabs/src/components/ChordGuitar/ChordGuitar.jsx\";\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Finger = _ref => {\n  let {\n    step\n  } = _ref;\n  const finger = {};\n  if (step.fret === -1) {\n    finger.vertical = '0';\n  } else if (step.fret === 0) {\n    finger.vertical = '0';\n  } else if (step.fret === 1) {\n    finger.vertical = 'opx';\n  } else if (step.fret === 2) {\n    finger.vertical = '25px';\n  } else if (step.fret === 3) {\n    finger.vertical = '50px';\n  } else if (step.fret === 4) {\n    finger.vertical = '75px';\n  }\n  if (step.finger === 0) {\n    finger.isFinger = false;\n  } else if (step.finger > 0) {\n    finger.isFinger = true;\n  }\n  console.log(finger);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '16.6px',\n      height: '20px',\n      background: `${finger.isFinger ? 'red' : 'yellow'}`,\n      transform: `translateY(${finger.vertical})`\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c = Finger;\nexport const ChordGuitar = _ref2 => {\n  let {\n    steps\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: ' 100px',\n      height: '100px',\n      background: '#D3F6EE',\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    children: steps.map(step => {\n      return /*#__PURE__*/_jsxDEV(Finger, {\n        step: step\n      }, nanoid(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_c2 = ChordGuitar;\nvar _c, _c2;\n$RefreshReg$(_c, \"Finger\");\n$RefreshReg$(_c2, \"ChordGuitar\");","map":{"version":3,"names":["nanoid","Finger","step","finger","fret","vertical","isFinger","console","log","width","height","background","transform","ChordGuitar","steps","display","justifyContent","map"],"sources":["/Users/alexandrlytvyn/Documents/GOIT_REACT/GuitarTabs/src/components/ChordGuitar/ChordGuitar.jsx"],"sourcesContent":["import { nanoid } from 'nanoid';\n\nconst Finger = ({ step }) => {\n  const finger = {};\n  if (step.fret === -1) {\n    finger.vertical = '0';\n  } else if (step.fret === 0) {\n    finger.vertical = '0';\n  } else if (step.fret === 1) {\n    finger.vertical = 'opx';\n  } else if (step.fret === 2) {\n    finger.vertical = '25px';\n  } else if (step.fret === 3) {\n    finger.vertical = '50px';\n  } else if (step.fret === 4) {\n    finger.vertical = '75px';\n  }\n\n  if (step.finger === 0) {\n    finger.isFinger = false;\n  } else if (step.finger > 0) {\n    finger.isFinger = true;\n  }\n\n  console.log(finger);\n\n  return (\n    <div\n      style={{\n        width: '16.6px',\n        height: '20px',\n        background: `${finger.isFinger ? 'red' : 'yellow'}`,\n        transform: `translateY(${finger.vertical})`,\n      }}\n    ></div>\n  );\n};\n\nexport const ChordGuitar = ({ steps }) => {\n  return (\n    <div\n      style={{\n        width: ' 100px',\n        height: '100px',\n        background: '#D3F6EE',\n        display: 'flex',\n        justifyContent: 'space-between',\n      }}\n    >\n      {steps.map((step) => {\n        return <Finger key={nanoid()} step={step} />;\n      })}\n    </div>\n  );\n};\n"],"mappings":";AAAA,SAASA,MAAM,QAAQ,QAAQ;AAAC;AAEhC,MAAMC,MAAM,GAAG,QAAc;EAAA,IAAb;IAAEC;EAAK,CAAC;EACtB,MAAMC,MAAM,GAAG,CAAC,CAAC;EACjB,IAAID,IAAI,CAACE,IAAI,KAAK,CAAC,CAAC,EAAE;IACpBD,MAAM,CAACE,QAAQ,GAAG,GAAG;EACvB,CAAC,MAAM,IAAIH,IAAI,CAACE,IAAI,KAAK,CAAC,EAAE;IAC1BD,MAAM,CAACE,QAAQ,GAAG,GAAG;EACvB,CAAC,MAAM,IAAIH,IAAI,CAACE,IAAI,KAAK,CAAC,EAAE;IAC1BD,MAAM,CAACE,QAAQ,GAAG,KAAK;EACzB,CAAC,MAAM,IAAIH,IAAI,CAACE,IAAI,KAAK,CAAC,EAAE;IAC1BD,MAAM,CAACE,QAAQ,GAAG,MAAM;EAC1B,CAAC,MAAM,IAAIH,IAAI,CAACE,IAAI,KAAK,CAAC,EAAE;IAC1BD,MAAM,CAACE,QAAQ,GAAG,MAAM;EAC1B,CAAC,MAAM,IAAIH,IAAI,CAACE,IAAI,KAAK,CAAC,EAAE;IAC1BD,MAAM,CAACE,QAAQ,GAAG,MAAM;EAC1B;EAEA,IAAIH,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;IACrBA,MAAM,CAACG,QAAQ,GAAG,KAAK;EACzB,CAAC,MAAM,IAAIJ,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;IAC1BA,MAAM,CAACG,QAAQ,GAAG,IAAI;EACxB;EAEAC,OAAO,CAACC,GAAG,CAACL,MAAM,CAAC;EAEnB,oBACE;IACE,KAAK,EAAE;MACLM,KAAK,EAAE,QAAQ;MACfC,MAAM,EAAE,MAAM;MACdC,UAAU,EAAG,GAAER,MAAM,CAACG,QAAQ,GAAG,KAAK,GAAG,QAAS,EAAC;MACnDM,SAAS,EAAG,cAAaT,MAAM,CAACE,QAAS;IAC3C;EAAE;IAAA;IAAA;IAAA;EAAA,QACG;AAEX,CAAC;AAAC,KAlCIJ,MAAM;AAoCZ,OAAO,MAAMY,WAAW,GAAG,SAAe;EAAA,IAAd;IAAEC;EAAM,CAAC;EACnC,oBACE;IACE,KAAK,EAAE;MACLL,KAAK,EAAE,QAAQ;MACfC,MAAM,EAAE,OAAO;MACfC,UAAU,EAAE,SAAS;MACrBI,OAAO,EAAE,MAAM;MACfC,cAAc,EAAE;IAClB,CAAE;IAAA,UAEDF,KAAK,CAACG,GAAG,CAAEf,IAAI,IAAK;MACnB,oBAAO,QAAC,MAAM;QAAgB,IAAI,EAAEA;MAAK,GAArBF,MAAM,EAAE;QAAA;QAAA;QAAA;MAAA,QAAgB;IAC9C,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,MAhBWa,WAAW;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}