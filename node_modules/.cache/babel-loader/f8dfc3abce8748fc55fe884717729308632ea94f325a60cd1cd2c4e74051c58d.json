{"ast":null,"code":"'use strict';\n\nconsole.log('WebAudioFont Player v2.92 GPL3');\nvar WebAudioFontLoader = require('./loader');\nvar WebAudioFontChannel = require('./channel');\nvar WebAudioFontReverberator = require('./reverberator');\nfunction WebAudioFontPlayer() {\n  this.envelopes = [];\n  this.loader = new WebAudioFontLoader(this);\n  this.onCacheFinish = null;\n  this.onCacheProgress = null;\n  this.afterTime = 0.05;\n  this.nearZero = 0.000001;\n  this.createChannel = function (audioContext) {\n    return new WebAudioFontChannel(audioContext);\n  };\n  this.createReverberator = function (audioContext) {\n    return new WebAudioFontReverberator(audioContext);\n  };\n  this.limitVolume = function (volume) {\n    if (volume) {\n      volume = 1.0 * volume;\n    } else {\n      volume = 0.5;\n    }\n    return volume;\n  };\n  this.queueChord = function (audioContext, target, preset, when, pitches, duration, volume, slides) {\n    volume = this.limitVolume(volume);\n    var envelopes = [];\n    for (var i = 0; i < pitches.length; i++) {\n      var envlp = this.queueWaveTable(audioContext, target, preset, when, pitches[i], duration, volume - Math.random() * 0.01, slides);\n      envelopes.push(envlp);\n    }\n    return envelopes;\n  };\n  this.queueStrumUp = function (audioContext, target, preset, when, pitches, duration, volume, slides) {\n    pitches.sort(function (a, b) {\n      return b - a;\n    });\n    return this.queueStrum(audioContext, target, preset, when, pitches, duration, volume, slides);\n  };\n  this.queueStrumDown = function (audioContext, target, preset, when, pitches, duration, volume, slides) {\n    pitches.sort(function (a, b) {\n      return a - b;\n    });\n    return this.queueStrum(audioContext, target, preset, when, pitches, duration, volume, slides);\n  };\n  this.queueStrum = function (audioContext, target, preset, when, pitches, duration, volume, slides) {\n    volume = this.limitVolume(volume);\n    if (when < audioContext.currentTime) {\n      when = audioContext.currentTime;\n    }\n    var envelopes = [];\n    for (var i = 0; i < pitches.length; i++) {\n      var envlp = this.queueWaveTable(audioContext, target, preset, when + i * 0.01, pitches[i], duration, volume - Math.random() * 0.01, slides);\n      envelopes.push(envlp);\n      volume = 0.9 * volume;\n    }\n    return envelopes;\n  };\n  this.queueSnap = function (audioContext, target, preset, when, pitches, duration, volume, slides) {\n    volume = this.limitVolume(volume);\n    volume = 1.5 * (volume || 1.0);\n    duration = 0.05;\n    return this.queueChord(audioContext, target, preset, when, pitches, duration, volume, slides);\n  };\n  this.resumeContext = function (audioContext) {\n    try {\n      if (audioContext.state == 'suspended') {\n        if (audioContext.constructor.name == 'AudioContext') {\n          console.log('audioContext.resume', audioContext);\n          audioContext.resume();\n        } else {\n          //skip\n        }\n      }\n    } catch (e) {\n      //don't care\n    }\n  };\n  this.queueWaveTable = function (audioContext, target, preset, when, pitch, duration, volume, slides) {\n    this.resumeContext(audioContext);\n    volume = this.limitVolume(volume);\n    var zone = this.findZone(audioContext, preset, pitch);\n    if (!zone.buffer) {\n      console.log('empty buffer ', zone);\n      return;\n    }\n    var baseDetune = zone.originalPitch - 100.0 * zone.coarseTune - zone.fineTune;\n    var playbackRate = 1.0 * Math.pow(2, (100.0 * pitch - baseDetune) / 1200.0);\n    //var sampleRatio = zone.sampleRate / audioContext.sampleRate;\n    var startWhen = when;\n    if (startWhen < audioContext.currentTime) {\n      startWhen = audioContext.currentTime;\n    }\n    var waveDuration = duration + this.afterTime;\n    var loop = true;\n    if (zone.loopStart < 1 || zone.loopStart >= zone.loopEnd) {\n      loop = false;\n    }\n    if (!loop) {\n      if (waveDuration > zone.buffer.duration / playbackRate) {\n        waveDuration = zone.buffer.duration / playbackRate;\n      }\n    }\n    var envelope = this.findEnvelope(audioContext, target, startWhen, waveDuration);\n    this.setupEnvelope(audioContext, envelope, zone, volume, startWhen, waveDuration, duration);\n    envelope.audioBufferSourceNode = audioContext.createBufferSource();\n    envelope.audioBufferSourceNode.playbackRate.setValueAtTime(playbackRate, 0);\n    if (slides) {\n      if (slides.length > 0) {\n        envelope.audioBufferSourceNode.playbackRate.setValueAtTime(playbackRate, when);\n        for (var i = 0; i < slides.length; i++) {\n          var newPlaybackRate = 1.0 * Math.pow(2, (100.0 * slides[i].pitch - baseDetune) / 1200.0);\n          var newWhen = when + slides[i].when;\n          envelope.audioBufferSourceNode.playbackRate.linearRampToValueAtTime(newPlaybackRate, newWhen);\n        }\n      }\n    }\n    envelope.audioBufferSourceNode.buffer = zone.buffer;\n    if (loop) {\n      envelope.audioBufferSourceNode.loop = true;\n      envelope.audioBufferSourceNode.loopStart = zone.loopStart / zone.sampleRate + zone.delay;\n      envelope.audioBufferSourceNode.loopEnd = zone.loopEnd / zone.sampleRate + zone.delay;\n    } else {\n      envelope.audioBufferSourceNode.loop = false;\n    }\n    envelope.audioBufferSourceNode.connect(envelope);\n    envelope.audioBufferSourceNode.start(startWhen, zone.delay);\n    envelope.audioBufferSourceNode.stop(startWhen + waveDuration);\n    envelope.when = startWhen;\n    envelope.duration = waveDuration;\n    envelope.pitch = pitch;\n    envelope.preset = preset;\n    return envelope;\n  };\n  this.noZeroVolume = function (n) {\n    if (n > this.nearZero) {\n      return n;\n    } else {\n      return this.nearZero;\n    }\n  };\n  this.setupEnvelope = function (audioContext, envelope, zone, volume, when, sampleDuration, noteDuration) {\n    envelope.gain.setValueAtTime(this.noZeroVolume(0), audioContext.currentTime);\n    var lastTime = 0;\n    var lastVolume = 0;\n    var duration = noteDuration;\n    var ahdsr = zone.ahdsr;\n    if (sampleDuration < duration + this.afterTime) {\n      duration = sampleDuration - this.afterTime;\n    }\n    if (ahdsr) {\n      if (!(ahdsr.length > 0)) {\n        ahdsr = [{\n          duration: 0,\n          volume: 1\n        }, {\n          duration: 0.5,\n          volume: 1\n        }, {\n          duration: 1.5,\n          volume: 0.5\n        }, {\n          duration: 3,\n          volume: 0\n        }];\n      }\n    } else {\n      ahdsr = [{\n        duration: 0,\n        volume: 1\n      }, {\n        duration: duration,\n        volume: 1\n      }];\n    }\n    envelope.gain.cancelScheduledValues(when);\n    envelope.gain.setValueAtTime(this.noZeroVolume(ahdsr[0].volume * volume), when);\n    for (var i = 0; i < ahdsr.length; i++) {\n      if (ahdsr[i].duration > 0) {\n        if (ahdsr[i].duration + lastTime > duration) {\n          var r = 1 - (ahdsr[i].duration + lastTime - duration) / ahdsr[i].duration;\n          var n = lastVolume - r * (lastVolume - ahdsr[i].volume);\n          envelope.gain.linearRampToValueAtTime(this.noZeroVolume(volume * n), when + duration);\n          break;\n        }\n        lastTime = lastTime + ahdsr[i].duration;\n        lastVolume = ahdsr[i].volume;\n        envelope.gain.linearRampToValueAtTime(this.noZeroVolume(volume * lastVolume), when + lastTime);\n      }\n    }\n    envelope.gain.linearRampToValueAtTime(this.noZeroVolume(0), when + duration + this.afterTime);\n  };\n  this.numValue = function (aValue, defValue) {\n    if (typeof aValue === \"number\") {\n      return aValue;\n    } else {\n      return defValue;\n    }\n  };\n  this.findEnvelope = function (audioContext, target, when, duration) {\n    var envelope = null;\n    for (var i = 0; i < this.envelopes.length; i++) {\n      var e = this.envelopes[i];\n      if (e.target == target && audioContext.currentTime > e.when + e.duration + 0.001) {\n        try {\n          e.audioBufferSourceNode.disconnect();\n          e.audioBufferSourceNode.stop(0);\n          e.audioBufferSourceNode = null;\n        } catch (x) {\n          //audioBufferSourceNode is dead already\n        }\n        envelope = e;\n        break;\n      }\n    }\n    if (!envelope) {\n      envelope = audioContext.createGain();\n      envelope.target = target;\n      envelope.connect(target);\n      envelope.cancel = function () {\n        if (envelope.when + envelope.duration > audioContext.currentTime) {\n          envelope.gain.cancelScheduledValues(0);\n          envelope.gain.setTargetAtTime(0.00001, audioContext.currentTime, 0.1);\n          envelope.when = audioContext.currentTime + 0.00001;\n          envelope.duration = 0;\n        }\n      };\n      this.envelopes.push(envelope);\n    }\n    return envelope;\n  };\n  this.adjustPreset = function (audioContext, preset) {\n    for (var i = 0; i < preset.zones.length; i++) {\n      this.adjustZone(audioContext, preset.zones[i]);\n    }\n  };\n  this.adjustZone = function (audioContext, zone) {\n    if (zone.buffer) {\n      //\n    } else {\n      zone.delay = 0;\n      if (zone.sample) {\n        var decoded = atob(zone.sample);\n        zone.buffer = audioContext.createBuffer(1, decoded.length / 2, zone.sampleRate);\n        var float32Array = zone.buffer.getChannelData(0);\n        var b1, b2, n;\n        for (var i = 0; i < decoded.length / 2; i++) {\n          b1 = decoded.charCodeAt(i * 2);\n          b2 = decoded.charCodeAt(i * 2 + 1);\n          if (b1 < 0) {\n            b1 = 256 + b1;\n          }\n          if (b2 < 0) {\n            b2 = 256 + b2;\n          }\n          n = b2 * 256 + b1;\n          if (n >= 65536 / 2) {\n            n = n - 65536;\n          }\n          float32Array[i] = n / 65536.0;\n        }\n      } else {\n        if (zone.file) {\n          var datalen = zone.file.length;\n          var arraybuffer = new ArrayBuffer(datalen);\n          var view = new Uint8Array(arraybuffer);\n          var decoded = atob(zone.file);\n          var b;\n          for (var i = 0; i < decoded.length; i++) {\n            b = decoded.charCodeAt(i);\n            view[i] = b;\n          }\n          audioContext.decodeAudioData(arraybuffer, function (audioBuffer) {\n            zone.buffer = audioBuffer;\n          });\n        }\n      }\n      zone.loopStart = this.numValue(zone.loopStart, 0);\n      zone.loopEnd = this.numValue(zone.loopEnd, 0);\n      zone.coarseTune = this.numValue(zone.coarseTune, 0);\n      zone.fineTune = this.numValue(zone.fineTune, 0);\n      zone.originalPitch = this.numValue(zone.originalPitch, 6000);\n      zone.sampleRate = this.numValue(zone.sampleRate, 44100);\n      zone.sustain = this.numValue(zone.originalPitch, 0);\n    }\n  };\n  this.findZone = function (audioContext, preset, pitch) {\n    var zone = null;\n    for (var i = preset.zones.length - 1; i >= 0; i--) {\n      zone = preset.zones[i];\n      if (zone.keyRangeLow <= pitch && zone.keyRangeHigh + 1 >= pitch) {\n        break;\n      }\n    }\n    try {\n      this.adjustZone(audioContext, zone);\n    } catch (ex) {\n      console.log('adjustZone', ex);\n    }\n    return zone;\n  };\n  this.cancelQueue = function (audioContext) {\n    for (var i = 0; i < this.envelopes.length; i++) {\n      var e = this.envelopes[i];\n      e.gain.cancelScheduledValues(0);\n      e.gain.setValueAtTime(this.nearZero, audioContext.currentTime);\n      e.when = -1;\n      try {\n        e.audioBufferSourceNode.disconnect();\n      } catch (ex) {\n        console.log(ex);\n      }\n    }\n  };\n  return this;\n}\nif (typeof module === 'object' && module.exports) {\n  module.exports = WebAudioFontPlayer;\n}\nif (typeof window !== 'undefined') {\n  window.WebAudioFontPlayer = WebAudioFontPlayer;\n}","map":{"version":3,"names":["console","log","WebAudioFontLoader","require","WebAudioFontChannel","WebAudioFontReverberator","WebAudioFontPlayer","envelopes","loader","onCacheFinish","onCacheProgress","afterTime","nearZero","createChannel","audioContext","createReverberator","limitVolume","volume","queueChord","target","preset","when","pitches","duration","slides","i","length","envlp","queueWaveTable","Math","random","push","queueStrumUp","sort","a","b","queueStrum","queueStrumDown","currentTime","queueSnap","resumeContext","state","constructor","name","resume","e","pitch","zone","findZone","buffer","baseDetune","originalPitch","coarseTune","fineTune","playbackRate","pow","startWhen","waveDuration","loop","loopStart","loopEnd","envelope","findEnvelope","setupEnvelope","audioBufferSourceNode","createBufferSource","setValueAtTime","newPlaybackRate","newWhen","linearRampToValueAtTime","sampleRate","delay","connect","start","stop","noZeroVolume","n","sampleDuration","noteDuration","gain","lastTime","lastVolume","ahdsr","cancelScheduledValues","r","numValue","aValue","defValue","disconnect","x","createGain","cancel","setTargetAtTime","adjustPreset","zones","adjustZone","sample","decoded","atob","createBuffer","float32Array","getChannelData","b1","b2","charCodeAt","file","datalen","arraybuffer","ArrayBuffer","view","Uint8Array","decodeAudioData","audioBuffer","sustain","keyRangeLow","keyRangeHigh","ex","cancelQueue","module","exports","window"],"sources":["/Users/alexandrlytvyn/Documents/GOIT_REACT/GuitarTabs/node_modules/webaudiofont/npm/src/player.js"],"sourcesContent":["'use strict'\r\nconsole.log('WebAudioFont Player v2.92 GPL3');\r\nvar WebAudioFontLoader = require('./loader');\r\nvar WebAudioFontChannel = require('./channel');\r\nvar WebAudioFontReverberator = require('./reverberator')\r\nfunction WebAudioFontPlayer() {\r\n\tthis.envelopes = [];\r\n\tthis.loader = new WebAudioFontLoader(this);\r\n\tthis.onCacheFinish = null;\r\n\tthis.onCacheProgress = null;\r\n\tthis.afterTime = 0.05;\r\n\tthis.nearZero = 0.000001;\r\n\tthis.createChannel = function (audioContext) {\r\n\t\treturn new WebAudioFontChannel(audioContext);\r\n\t};\r\n\tthis.createReverberator = function (audioContext) {\r\n\t\treturn new WebAudioFontReverberator(audioContext);\r\n\t};\r\n\tthis.limitVolume = function (volume) {\r\n\t\tif (volume) {\r\n\t\t\tvolume = 1.0 * volume;\r\n\t\t} else {\r\n\t\t\tvolume = 0.5;\r\n\t\t}\r\n\t\treturn volume;\r\n\t};\r\n\tthis.queueChord = function (audioContext, target, preset, when, pitches, duration, volume, slides) {\r\n\t\tvolume = this.limitVolume(volume);\r\n\t\tvar envelopes = [];\r\n\t\tfor (var i = 0; i < pitches.length; i++) {\r\n\t\t\tvar envlp = this.queueWaveTable(audioContext, target, preset, when, pitches[i], duration, volume - Math.random() * 0.01, slides);\r\n\t\t\tenvelopes.push(envlp);\r\n\t\t}\r\n\t\treturn envelopes;\r\n\t};\r\n\tthis.queueStrumUp = function (audioContext, target, preset, when, pitches, duration, volume, slides) {\r\n\t\tpitches.sort(function (a, b) {\r\n\t\t\treturn b - a;\r\n\t\t});\r\n\t\treturn this.queueStrum(audioContext, target, preset, when, pitches, duration, volume, slides);\r\n\t};\r\n\tthis.queueStrumDown = function (audioContext, target, preset, when, pitches, duration, volume, slides) {\r\n\t\tpitches.sort(function (a, b) {\r\n\t\t\treturn a - b;\r\n\t\t});\r\n\t\treturn this.queueStrum(audioContext, target, preset, when, pitches, duration, volume, slides);\r\n\t};\r\n\tthis.queueStrum = function (audioContext, target, preset, when, pitches, duration, volume, slides) {\r\n\t\tvolume = this.limitVolume(volume);\r\n\t\tif (when < audioContext.currentTime) {\r\n\t\t\twhen = audioContext.currentTime;\r\n\t\t}\r\n\t\tvar envelopes = [];\r\n\t\tfor (var i = 0; i < pitches.length; i++) {\r\n\t\t\tvar envlp = this.queueWaveTable(audioContext, target, preset, when + i * 0.01, pitches[i], duration, volume - Math.random() * 0.01, slides);\r\n\t\t\tenvelopes.push(envlp);\r\n\t\t\tvolume = 0.9 * volume;\r\n\t\t}\r\n\t\treturn envelopes;\r\n\t};\r\n\tthis.queueSnap = function (audioContext, target, preset, when, pitches, duration, volume, slides) {\r\n\t\tvolume = this.limitVolume(volume);\r\n\t\tvolume = 1.5 * (volume || 1.0);\r\n\t\tduration = 0.05;\r\n\t\treturn this.queueChord(audioContext, target, preset, when, pitches, duration, volume, slides);\r\n\t};\r\n\tthis.resumeContext = function (audioContext) {\r\n\t\ttry {\r\n\t\t\tif (audioContext.state == 'suspended') {\r\n\t\t\t\tif (audioContext.constructor.name == 'AudioContext') {\r\n\t\t\t\t\tconsole.log('audioContext.resume', audioContext);\r\n\t\t\t\t\taudioContext.resume();\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//skip\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\t//don't care\r\n\t\t}\r\n\t}\r\n\tthis.queueWaveTable = function (audioContext, target, preset, when, pitch, duration, volume, slides) {\r\n\t\tthis.resumeContext(audioContext);\r\n\t\tvolume = this.limitVolume(volume);\r\n\t\tvar zone = this.findZone(audioContext, preset, pitch);\r\n\t\tif (!(zone.buffer)) {\r\n\t\t\tconsole.log('empty buffer ', zone);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar baseDetune = zone.originalPitch - 100.0 * zone.coarseTune - zone.fineTune;\r\n\t\tvar playbackRate = 1.0 * Math.pow(2, (100.0 * pitch - baseDetune) / 1200.0);\r\n\t\t//var sampleRatio = zone.sampleRate / audioContext.sampleRate;\r\n\t\tvar startWhen = when;\r\n\t\tif (startWhen < audioContext.currentTime) {\r\n\t\t\tstartWhen = audioContext.currentTime;\r\n\t\t}\r\n\t\tvar waveDuration = duration + this.afterTime;\r\n\t\tvar loop = true;\r\n\t\tif (zone.loopStart < 1 || zone.loopStart >= zone.loopEnd) {\r\n\t\t\tloop = false;\r\n\t\t}\r\n\t\tif (!loop) {\r\n\t\t\tif (waveDuration > zone.buffer.duration / playbackRate) {\r\n\t\t\t\twaveDuration = zone.buffer.duration / playbackRate;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar envelope = this.findEnvelope(audioContext, target, startWhen, waveDuration);\r\n\t\tthis.setupEnvelope(audioContext, envelope, zone, volume, startWhen, waveDuration, duration);\r\n\t\tenvelope.audioBufferSourceNode = audioContext.createBufferSource();\r\n\t\tenvelope.audioBufferSourceNode.playbackRate.setValueAtTime(playbackRate, 0);\r\n\t\tif (slides) {\r\n\t\t\tif (slides.length > 0) {\r\n\t\t\t\tenvelope.audioBufferSourceNode.playbackRate.setValueAtTime(playbackRate, when);\r\n\t\t\t\tfor (var i = 0; i < slides.length; i++) {\r\n\t\t\t\t\tvar newPlaybackRate = 1.0 * Math.pow(2, (100.0 * slides[i].pitch - baseDetune) / 1200.0);\r\n\t\t\t\t\tvar newWhen = when + slides[i].when;\r\n\t\t\t\t\tenvelope.audioBufferSourceNode.playbackRate.linearRampToValueAtTime(newPlaybackRate, newWhen);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tenvelope.audioBufferSourceNode.buffer = zone.buffer;\r\n\t\tif (loop) {\r\n\t\t\tenvelope.audioBufferSourceNode.loop = true;\r\n\t\t\tenvelope.audioBufferSourceNode.loopStart = zone.loopStart / zone.sampleRate + zone.delay;\r\n\t\t\tenvelope.audioBufferSourceNode.loopEnd = zone.loopEnd / zone.sampleRate + zone.delay;\r\n\t\t} else {\r\n\t\t\tenvelope.audioBufferSourceNode.loop = false;\r\n\t\t}\r\n\t\tenvelope.audioBufferSourceNode.connect(envelope);\r\n\t\tenvelope.audioBufferSourceNode.start(startWhen, zone.delay);\r\n\t\tenvelope.audioBufferSourceNode.stop(startWhen + waveDuration);\r\n\t\tenvelope.when = startWhen;\r\n\t\tenvelope.duration = waveDuration;\r\n\t\tenvelope.pitch = pitch;\r\n\t\tenvelope.preset = preset;\r\n\t\treturn envelope;\r\n\t};\r\n\tthis.noZeroVolume = function (n) {\r\n\t\tif (n > this.nearZero) {\r\n\t\t\treturn n;\r\n\t\t} else {\r\n\t\t\treturn this.nearZero;\r\n\t\t}\r\n\t};\r\n\tthis.setupEnvelope = function (audioContext, envelope, zone, volume, when, sampleDuration, noteDuration) {\r\n\t\tenvelope.gain.setValueAtTime(this.noZeroVolume(0), audioContext.currentTime);\r\n\t\tvar lastTime = 0;\r\n\t\tvar lastVolume = 0;\r\n\t\tvar duration = noteDuration;\r\n\t\tvar ahdsr = zone.ahdsr;\r\n\t\tif (sampleDuration < duration + this.afterTime) {\r\n\t\t\tduration = sampleDuration - this.afterTime;\r\n\t\t}\r\n\t\tif (ahdsr) {\r\n\t\t\tif (!(ahdsr.length > 0)) {\r\n\t\t\t\tahdsr = [{\r\n\t\t\t\t\t\tduration: 0,\r\n\t\t\t\t\t\tvolume: 1\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\tduration: 0.5,\r\n\t\t\t\t\t\tvolume: 1\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\tduration: 1.5,\r\n\t\t\t\t\t\tvolume: 0.5\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\tduration: 3,\r\n\t\t\t\t\t\tvolume: 0\r\n\t\t\t\t\t}\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tahdsr = [{\r\n\t\t\t\t\tduration: 0,\r\n\t\t\t\t\tvolume: 1\r\n\t\t\t\t}, {\r\n\t\t\t\t\tduration: duration,\r\n\t\t\t\t\tvolume: 1\r\n\t\t\t\t}\r\n\t\t\t];\r\n\t\t}\r\n\t\tenvelope.gain.cancelScheduledValues(when);\r\n\t\tenvelope.gain.setValueAtTime(this.noZeroVolume(ahdsr[0].volume * volume), when);\r\n\t\tfor (var i = 0; i < ahdsr.length; i++) {\r\n\t\t\tif (ahdsr[i].duration > 0) {\r\n\t\t\t\tif (ahdsr[i].duration + lastTime > duration) {\r\n\t\t\t\t\tvar r = 1 - (ahdsr[i].duration + lastTime - duration) / ahdsr[i].duration;\r\n\t\t\t\t\tvar n = lastVolume - r * (lastVolume - ahdsr[i].volume);\r\n\t\t\t\t\tenvelope.gain.linearRampToValueAtTime(this.noZeroVolume(volume * n), when + duration);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tlastTime = lastTime + ahdsr[i].duration;\r\n\t\t\t\tlastVolume = ahdsr[i].volume;\r\n\t\t\t\tenvelope.gain.linearRampToValueAtTime(this.noZeroVolume(volume * lastVolume), when + lastTime);\r\n\t\t\t}\r\n\t\t}\r\n\t\tenvelope.gain.linearRampToValueAtTime(this.noZeroVolume(0), when + duration + this.afterTime);\r\n\t};\r\n\tthis.numValue = function (aValue, defValue) {\r\n\t\tif (typeof aValue === \"number\") {\r\n\t\t\treturn aValue;\r\n\t\t} else {\r\n\t\t\treturn defValue;\r\n\t\t}\r\n\t};\r\n\tthis.findEnvelope = function (audioContext, target, when, duration) {\r\n\t\tvar envelope = null;\r\n\t\tfor (var i = 0; i < this.envelopes.length; i++) {\r\n\t\t\tvar e = this.envelopes[i];\r\n\t\t\tif (e.target == target && audioContext.currentTime > e.when + e.duration + 0.001) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\te.audioBufferSourceNode.disconnect();\r\n\t\t\t\t\te.audioBufferSourceNode.stop(0);\r\n\t\t\t\t\te.audioBufferSourceNode = null;\r\n\t\t\t\t} catch (x) {\r\n\t\t\t\t\t//audioBufferSourceNode is dead already\r\n\t\t\t\t}\r\n\t\t\t\tenvelope = e;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!(envelope)) {\r\n\t\t\tenvelope = audioContext.createGain();\r\n\t\t\tenvelope.target = target;\r\n\t\t\tenvelope.connect(target);\r\n\t\t\tenvelope.cancel = function () {\r\n\t\t\t\tif (envelope.when + envelope.duration > audioContext.currentTime) {\r\n\t\t\t\t\tenvelope.gain.cancelScheduledValues(0);\r\n\t\t\t\t\tenvelope.gain.setTargetAtTime(0.00001, audioContext.currentTime, 0.1);\r\n\t\t\t\t\tenvelope.when = audioContext.currentTime + 0.00001;\r\n\t\t\t\t\tenvelope.duration = 0;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tthis.envelopes.push(envelope);\r\n\t\t}\r\n\t\treturn envelope;\r\n\t};\r\n\tthis.adjustPreset = function (audioContext, preset) {\r\n\t\tfor (var i = 0; i < preset.zones.length; i++) {\r\n\t\t\tthis.adjustZone(audioContext, preset.zones[i]);\r\n\t\t}\r\n\t};\r\n\tthis.adjustZone = function (audioContext, zone) {\r\n\t\tif (zone.buffer) {\r\n\t\t\t//\r\n\t\t} else {\r\n\t\t\tzone.delay = 0;\r\n\t\t\tif (zone.sample) {\r\n\t\t\t\tvar decoded = atob(zone.sample);\r\n\t\t\t\tzone.buffer = audioContext.createBuffer(1, decoded.length / 2, zone.sampleRate);\r\n\t\t\t\tvar float32Array = zone.buffer.getChannelData(0);\r\n\t\t\t\tvar b1,\r\n\t\t\t\tb2,\r\n\t\t\t\tn;\r\n\t\t\t\tfor (var i = 0; i < decoded.length / 2; i++) {\r\n\t\t\t\t\tb1 = decoded.charCodeAt(i * 2);\r\n\t\t\t\t\tb2 = decoded.charCodeAt(i * 2 + 1);\r\n\t\t\t\t\tif (b1 < 0) {\r\n\t\t\t\t\t\tb1 = 256 + b1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (b2 < 0) {\r\n\t\t\t\t\t\tb2 = 256 + b2;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tn = b2 * 256 + b1;\r\n\t\t\t\t\tif (n >= 65536 / 2) {\r\n\t\t\t\t\t\tn = n - 65536;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfloat32Array[i] = n / 65536.0;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (zone.file) {\r\n\t\t\t\t\tvar datalen = zone.file.length;\r\n\t\t\t\t\tvar arraybuffer = new ArrayBuffer(datalen);\r\n\t\t\t\t\tvar view = new Uint8Array(arraybuffer);\r\n\t\t\t\t\tvar decoded = atob(zone.file);\r\n\t\t\t\t\tvar b;\r\n\t\t\t\t\tfor (var i = 0; i < decoded.length; i++) {\r\n\t\t\t\t\t\tb = decoded.charCodeAt(i);\r\n\t\t\t\t\t\tview[i] = b;\r\n\t\t\t\t\t}\r\n\t\t\t\t\taudioContext.decodeAudioData(arraybuffer, function (audioBuffer) {\r\n\t\t\t\t\t\tzone.buffer = audioBuffer;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tzone.loopStart = this.numValue(zone.loopStart, 0);\r\n\t\t\tzone.loopEnd = this.numValue(zone.loopEnd, 0);\r\n\t\t\tzone.coarseTune = this.numValue(zone.coarseTune, 0);\r\n\t\t\tzone.fineTune = this.numValue(zone.fineTune, 0);\r\n\t\t\tzone.originalPitch = this.numValue(zone.originalPitch, 6000);\r\n\t\t\tzone.sampleRate = this.numValue(zone.sampleRate, 44100);\r\n\t\t\tzone.sustain = this.numValue(zone.originalPitch, 0);\r\n\t\t}\r\n\t};\r\n\tthis.findZone = function (audioContext, preset, pitch) {\r\n\t\tvar zone = null;\r\n\t\tfor (var i = preset.zones.length - 1; i >= 0; i--) {\r\n\t\t\tzone = preset.zones[i];\r\n\t\t\tif (zone.keyRangeLow <= pitch && zone.keyRangeHigh + 1 >= pitch) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tthis.adjustZone(audioContext, zone);\r\n\t\t} catch (ex) {\r\n\t\t\tconsole.log('adjustZone', ex);\r\n\t\t}\r\n\t\treturn zone;\r\n\t};\r\n\tthis.cancelQueue = function (audioContext) {\r\n\t\tfor (var i = 0; i < this.envelopes.length; i++) {\r\n\t\t\tvar e = this.envelopes[i];\r\n\t\t\te.gain.cancelScheduledValues(0);\r\n\t\t\te.gain.setValueAtTime(this.nearZero, audioContext.currentTime);\r\n\t\t\te.when = -1;\r\n\t\t\ttry {\r\n\t\t\t\te.audioBufferSourceNode.disconnect();\r\n\t\t\t} catch (ex) {\r\n\t\t\t\tconsole.log(ex);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn this;\r\n}\r\nif (typeof module === 'object' && module.exports) {\r\n\tmodule.exports = WebAudioFontPlayer;\r\n}\r\nif (typeof window !== 'undefined') {\r\n\twindow.WebAudioFontPlayer = WebAudioFontPlayer;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}