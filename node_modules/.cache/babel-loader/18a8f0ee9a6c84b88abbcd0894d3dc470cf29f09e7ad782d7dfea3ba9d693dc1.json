{"ast":null,"code":"var _jsxFileName = \"/Users/alexandrlytvyn/Documents/GOIT_REACT/GuitarTabs/src/components/GuitarTabsList/GuitarTabsList.jsx\";\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Finger = () => {};\n_c = Finger;\nconst Position = pos => {\n  console.log(pos);\n};\n_c2 = Position;\nexport const GuitarTabsList = _ref => {\n  let {\n    chord\n  } = _ref;\n  console.log(chord);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Guitar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [chord.key, \"_\", chord.suffix]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.keys(chord).length > 0 && chord.positions.map(position => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"O\", position.midi, \"O\"]\n          }, nanoid(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 22\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c3 = GuitarTabsList;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Finger\");\n$RefreshReg$(_c2, \"Position\");\n$RefreshReg$(_c3, \"GuitarTabsList\");","map":{"version":3,"names":["nanoid","Finger","Position","pos","console","log","GuitarTabsList","chord","key","suffix","Object","keys","length","positions","map","position","midi"],"sources":["/Users/alexandrlytvyn/Documents/GOIT_REACT/GuitarTabs/src/components/GuitarTabsList/GuitarTabsList.jsx"],"sourcesContent":["import { nanoid } from 'nanoid';\n\nconst Finger = () => {};\n\nconst Position = (pos) => {\n  console.log(pos);\n};\n\nexport const GuitarTabsList = ({ chord }) => {\n  console.log(chord);\n  return (\n    <>\n      <div>\n        <h1>Guitar</h1>\n        <h2>\n          {chord.key}_{chord.suffix}\n        </h2>\n        <ul>\n          {Object.keys(chord).length > 0 &&\n            chord.positions.map((position) => {\n              return <li key={nanoid()}>O{position.midi}O</li>;\n            })}\n        </ul>\n      </div>\n    </>\n  );\n};\n"],"mappings":";AAAA,SAASA,MAAM,QAAQ,QAAQ;AAAC;AAAA;AAEhC,MAAMC,MAAM,GAAG,MAAM,CAAC,CAAC;AAAC,KAAlBA,MAAM;AAEZ,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EACxBC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;AAClB,CAAC;AAAC,MAFID,QAAQ;AAId,OAAO,MAAMI,cAAc,GAAG,QAAe;EAAA,IAAd;IAAEC;EAAM,CAAC;EACtCH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;EAClB,oBACE;IAAA,uBACE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAe,eACf;QAAA,WACGA,KAAK,CAACC,GAAG,OAAGD,KAAK,CAACE,MAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QACtB,eACL;QAAA,UACGC,MAAM,CAACC,IAAI,CAACJ,KAAK,CAAC,CAACK,MAAM,GAAG,CAAC,IAC5BL,KAAK,CAACM,SAAS,CAACC,GAAG,CAAEC,QAAQ,IAAK;UAChC,oBAAO;YAAA,gBAAqBA,QAAQ,CAACC,IAAI;UAAA,GAAzBhB,MAAM,EAAE;YAAA;YAAA;YAAA;UAAA,QAAwB;QAClD,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QACD;IAAA;MAAA;MAAA;MAAA;IAAA;EACD,iBACL;AAEP,CAAC;AAAC,MAlBWM,cAAc;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}