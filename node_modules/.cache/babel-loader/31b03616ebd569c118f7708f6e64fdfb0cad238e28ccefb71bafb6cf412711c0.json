{"ast":null,"code":"var _jsxFileName = \"/Users/alexandrlytvyn/Documents/GOIT_REACT/GuitarTabs/src/components/NavigationSuffix/NavigationSuffix.jsx\";\nimport tabs from '../../db.json';\nimport { ListSuffixes, ListItem } from './NavigationSuffix.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NavigationSuffix = _ref => {\n  var _tabs$chords$k;\n  let {\n    ss,\n    k\n  } = _ref;\n  const onClick = event => {\n    ss(event.target.outerText);\n  };\n\n  // console.log(tabs.chords.A);\n  let allSuffix = tabs.suffixes;\n  let activeSuffix = [];\n  console.log(tabs.chords[k]);\n  activeSuffix = (_tabs$chords$k = tabs.chords[k]) !== null && _tabs$chords$k !== void 0 ? _tabs$chords$k : tabs.chords[k].map(chord => {\n    return chord.suffix;\n  });\n  const resultSuffixes = [];\n  const createSuffixList = () => {\n    for (const key of allSuffix) {\n      if (activeSuffix === undefined) {\n        return;\n      } else if (activeSuffix.find(suf => suf === key)) {\n        resultSuffixes.push({\n          suffix: key,\n          isActive: true\n        });\n      } else resultSuffixes.push({\n        suffix: key,\n        isActive: false\n      });\n    }\n  };\n  createSuffixList();\n\n  // for (let i = 0; i < allSuffix.length; i++) {\n  //   if (allSuffix.find((option) => option[i] === activeSuffix[i])) {\n  //     resultSuffixes.push({\n  //       suffix: allSuffix[i],\n  //       isActive: false,\n  //     });\n  //   } else {\n  //     resultSuffixes.push({\n  //       suffix: allSuffix[i],\n  //       isActive: true,\n  //     });\n  //   }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ListSuffixes, {\n      children: resultSuffixes.map(ch => {\n        // console.log(suffix);\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          onClick: onClick,\n          active: ch.isActive,\n          children: ch.suffix\n        }, ch.suffix, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_c = NavigationSuffix;\nvar _c;\n$RefreshReg$(_c, \"NavigationSuffix\");","map":{"version":3,"names":["tabs","ListSuffixes","ListItem","NavigationSuffix","ss","k","onClick","event","target","outerText","allSuffix","suffixes","activeSuffix","console","log","chords","map","chord","suffix","resultSuffixes","createSuffixList","key","undefined","find","suf","push","isActive","ch"],"sources":["/Users/alexandrlytvyn/Documents/GOIT_REACT/GuitarTabs/src/components/NavigationSuffix/NavigationSuffix.jsx"],"sourcesContent":["import tabs from '../../db.json';\nimport { ListSuffixes, ListItem } from './NavigationSuffix.styled';\n\nexport const NavigationSuffix = ({ ss, k }) => {\n  const onClick = (event) => {\n    ss(event.target.outerText);\n  };\n\n  // console.log(tabs.chords.A);\n  let allSuffix = tabs.suffixes;\n  let activeSuffix = [];\n  console.log(tabs.chords[k]);\n\n  activeSuffix =\n    tabs.chords[k] ??\n    tabs.chords[k].map((chord) => {\n      return chord.suffix;\n    });\n\n  const resultSuffixes = [];\n\n  const createSuffixList = () => {\n    for (const key of allSuffix) {\n      if (activeSuffix === undefined) {\n        return;\n      } else if (activeSuffix.find((suf) => suf === key)) {\n        resultSuffixes.push({ suffix: key, isActive: true });\n      } else resultSuffixes.push({ suffix: key, isActive: false });\n    }\n  };\n\n  createSuffixList();\n\n  // for (let i = 0; i < allSuffix.length; i++) {\n  //   if (allSuffix.find((option) => option[i] === activeSuffix[i])) {\n  //     resultSuffixes.push({\n  //       suffix: allSuffix[i],\n  //       isActive: false,\n  //     });\n  //   } else {\n  //     resultSuffixes.push({\n  //       suffix: allSuffix[i],\n  //       isActive: true,\n  //     });\n  //   }\n  // }\n\n  return (\n    <div>\n      <ListSuffixes>\n        {resultSuffixes.map((ch) => {\n          // console.log(suffix);\n          return (\n            <ListItem key={ch.suffix} onClick={onClick} active={ch.isActive}>\n              {ch.suffix}\n            </ListItem>\n          );\n        })}\n      </ListSuffixes>\n    </div>\n  );\n};\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,eAAe;AAChC,SAASC,YAAY,EAAEC,QAAQ,QAAQ,2BAA2B;AAAC;AAEnE,OAAO,MAAMC,gBAAgB,GAAG,QAAe;EAAA;EAAA,IAAd;IAAEC,EAAE;IAAEC;EAAE,CAAC;EACxC,MAAMC,OAAO,GAAIC,KAAK,IAAK;IACzBH,EAAE,CAACG,KAAK,CAACC,MAAM,CAACC,SAAS,CAAC;EAC5B,CAAC;;EAED;EACA,IAAIC,SAAS,GAAGV,IAAI,CAACW,QAAQ;EAC7B,IAAIC,YAAY,GAAG,EAAE;EACrBC,OAAO,CAACC,GAAG,CAACd,IAAI,CAACe,MAAM,CAACV,CAAC,CAAC,CAAC;EAE3BO,YAAY,qBACVZ,IAAI,CAACe,MAAM,CAACV,CAAC,CAAC,2DACdL,IAAI,CAACe,MAAM,CAACV,CAAC,CAAC,CAACW,GAAG,CAAEC,KAAK,IAAK;IAC5B,OAAOA,KAAK,CAACC,MAAM;EACrB,CAAC,CAAC;EAEJ,MAAMC,cAAc,GAAG,EAAE;EAEzB,MAAMC,gBAAgB,GAAG,MAAM;IAC7B,KAAK,MAAMC,GAAG,IAAIX,SAAS,EAAE;MAC3B,IAAIE,YAAY,KAAKU,SAAS,EAAE;QAC9B;MACF,CAAC,MAAM,IAAIV,YAAY,CAACW,IAAI,CAAEC,GAAG,IAAKA,GAAG,KAAKH,GAAG,CAAC,EAAE;QAClDF,cAAc,CAACM,IAAI,CAAC;UAAEP,MAAM,EAAEG,GAAG;UAAEK,QAAQ,EAAE;QAAK,CAAC,CAAC;MACtD,CAAC,MAAMP,cAAc,CAACM,IAAI,CAAC;QAAEP,MAAM,EAAEG,GAAG;QAAEK,QAAQ,EAAE;MAAM,CAAC,CAAC;IAC9D;EACF,CAAC;EAEDN,gBAAgB,EAAE;;EAElB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAA,uBACE,QAAC,YAAY;MAAA,UACVD,cAAc,CAACH,GAAG,CAAEW,EAAE,IAAK;QAC1B;QACA,oBACE,QAAC,QAAQ;UAAiB,OAAO,EAAErB,OAAQ;UAAC,MAAM,EAAEqB,EAAE,CAACD,QAAS;UAAA,UAC7DC,EAAE,CAACT;QAAM,GADGS,EAAE,CAACT,MAAM;UAAA;UAAA;UAAA;QAAA,QAEb;MAEf,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA;EACW;IAAA;IAAA;IAAA;EAAA,QACX;AAEV,CAAC;AAAC,KA1DWf,gBAAgB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}