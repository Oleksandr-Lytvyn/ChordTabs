{"ast":null,"code":"var _jsxFileName = \"/Users/alexandrlytvyn/Documents/GOIT_REACT/GuitarTabs/src/components/GuitarTabsList/Position.jsx\";\nimport { nanoid } from 'nanoid';\nimport { StyledPosition } from './GuitarTabsList.styled';\nimport { ChordGuitar } from '../ChordGuitar/ChordGuitar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Position = _ref => {\n  let {\n    pos,\n    play,\n    setNotes\n  } = _ref;\n  const steps = [];\n  for (let index = 0; index < pos.fingers.length; index++) {\n    steps.push({\n      fret: pos.frets[index],\n      finger: pos.fingers[index],\n      baseFret: pos.baseFret\n    });\n  }\n  // console.log(poss.midi);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(StyledPosition, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"base fret: \", pos.baseFret]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChordGuitar, {\n        steps: steps,\n        midi: pos.midi,\n        play: play,\n        setNotes: setNotes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = Position;\nvar _c;\n$RefreshReg$(_c, \"Position\");","map":{"version":3,"names":["nanoid","StyledPosition","ChordGuitar","Position","pos","play","setNotes","steps","index","fingers","length","push","fret","frets","finger","baseFret","midi"],"sources":["/Users/alexandrlytvyn/Documents/GOIT_REACT/GuitarTabs/src/components/GuitarTabsList/Position.jsx"],"sourcesContent":["import { nanoid } from 'nanoid';\n\nimport { StyledPosition } from './GuitarTabsList.styled';\nimport { ChordGuitar } from '../ChordGuitar/ChordGuitar';\n\nexport const Position = ({ pos, play, setNotes }) => {\n  const steps = [];\n  for (let index = 0; index < pos.fingers.length; index++) {\n    steps.push({ fret: pos.frets[index], finger: pos.fingers[index], baseFret: pos.baseFret });\n  }\n  // console.log(poss.midi);\n  return (\n    <>\n      <StyledPosition>\n        <h3>base fret: {pos.baseFret}</h3>\n        {/* <p>baseFret:{pos.baseFret}</p>\n        <p>capo:{typeof pos.capo}</p>\n        <p>barres:{pos.barres}</p> */}\n        <ChordGuitar steps={steps} midi={pos.midi} play={play} setNotes={setNotes} />\n        {/* <ul>\n          {steps.map((step) => {\n            return (\n              <li key={nanoid()}>\n                fret:{step.fret}\n                <br />\n                finger:{step.finger}\n              </li>\n            );\n          })}\n        </ul> */}\n      </StyledPosition>\n    </>\n  );\n};\n"],"mappings":";AAAA,SAASA,MAAM,QAAQ,QAAQ;AAE/B,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,WAAW,QAAQ,4BAA4B;AAAC;AAAA;AAEzD,OAAO,MAAMC,QAAQ,GAAG,QAA6B;EAAA,IAA5B;IAAEC,GAAG;IAAEC,IAAI;IAAEC;EAAS,CAAC;EAC9C,MAAMC,KAAK,GAAG,EAAE;EAChB,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGJ,GAAG,CAACK,OAAO,CAACC,MAAM,EAAEF,KAAK,EAAE,EAAE;IACvDD,KAAK,CAACI,IAAI,CAAC;MAAEC,IAAI,EAAER,GAAG,CAACS,KAAK,CAACL,KAAK,CAAC;MAAEM,MAAM,EAAEV,GAAG,CAACK,OAAO,CAACD,KAAK,CAAC;MAAEO,QAAQ,EAAEX,GAAG,CAACW;IAAS,CAAC,CAAC;EAC5F;EACA;EACA,oBACE;IAAA,uBACE,QAAC,cAAc;MAAA,wBACb;QAAA,0BAAgBX,GAAG,CAACW,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,eAIlC,QAAC,WAAW;QAAC,KAAK,EAAER,KAAM;QAAC,IAAI,EAAEH,GAAG,CAACY,IAAK;QAAC,IAAI,EAAEX,IAAK;QAAC,QAAQ,EAAEC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EAY9D,iBAChB;AAEP,CAAC;AAAC,KA5BWH,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}